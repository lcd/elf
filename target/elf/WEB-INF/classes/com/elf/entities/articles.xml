<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="articles">
	<typeAlias alias="Article" type="com.elf.entities.Article" />
	<resultMap class="Article" id="noContentResult">
		<result column="id" property="id" />
		<result column="title" property="title" />
		<result column="excerpt" property="excerpt" />
		<result column="publish_status" property="publishStatus" />
		<result column="author_id" property="authorId" />
		<result column="category_id" property="categoryId" />
		<result column="comment_status" property="commentStatus" />
		<result column="comment_need_audit" property="commentNeedAudit"/>
		<result column="top" property="top" />
		<result column="publish_level" property="publishLevel" />
		<result column="access_password" property="accessPassword" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="off_line_time" property="offLineTime" />
		<result column="page_view" property="pageView" />
	</resultMap>
	<resultMap class="Article" id="articleResult" extends="noContentResult">
		<result column="content" property="content" />
	</resultMap>
	
	<insert id="insert" parameterClass="Article">
		INSERT INTO `articles`
            (`id`
            <isNotNull property="title" prepend=",">`title`</isNotNull>
            <isNotNull property="content" prepend=",">`content`</isNotNull>
            <isNotNull property="excerpt" prepend=",">`excerpt`</isNotNull>
            <isNotNull property="publishStatus" prepend=",">`publish_status`</isNotNull>
            <isNotNull property="authorId" prepend=",">`author_id`</isNotNull>
            <isNotNull property="categoryId" prepend=",">`category_id`</isNotNull>
            <isNotNull property="commentStatus" prepend=",">`comment_status`</isNotNull>
            <isNotNull property="commentNeedAudit" prepend=",">`comment_need_audit`</isNotNull>
            <isNotNull property="top" prepend=",">`top`</isNotNull>
            <isNotNull property="publishLevel" prepend=",">`publish_level`</isNotNull>
            <isNotNull property="accessPassword" prepend=",">`access_password`</isNotNull>
            <isNotNull property="createTime" prepend=",">`create_time`</isNotNull>
            <isNotNull property="updateTime" prepend=",">`update_time`</isNotNull>
            <isNotNull property="offLineTime" prepend=",">`off_line_time`</isNotNull>
            <isNotNull property="pageView" prepend=",">`page_view`</isNotNull>
             )
		VALUES 
			(NULL
			<isNotNull property="title" prepend=",">#title#</isNotNull>
            <isNotNull property="content" prepend=",">#content#</isNotNull>
            <isNotNull property="excerpt" prepend=",">#excerpt#</isNotNull>
            <isNotNull property="publishStatus" prepend=",">#publishStatus#</isNotNull>
            <isNotNull property="authorId" prepend=",">#authorId#</isNotNull>
            <isNotNull property="categoryId" prepend=",">#categoryId#</isNotNull>
            <isNotNull property="commentStatus" prepend=",">#commentStatus#</isNotNull>
            <isNotNull property="commentNeedAudit" prepend=",">#commentNeedAudit#</isNotNull>
            <isNotNull property="top" prepend=",">#top#</isNotNull>
            <isNotNull property="publishLevel" prepend=",">#publishLevel#</isNotNull>
            <isNotNull property="accessPassword" prepend=",">#accessPassword#</isNotNull>
            <isNotNull property="createTime" prepend=",">#createTime#</isNotNull>
            <isNotNull property="updateTime" prepend=",">#update_time#</isNotNull>
            <isNotNull property="offLineTime" prepend=",">#offLineTime#</isNotNull>
            <isNotNull property="pageView" prepend=",">#pageView#</isNotNull>   
			);
			
			<selectKey resultClass="int" keyProperty="id">  
				<![CDATA[SELECT LAST_INSERT_ID() AS id ]]>
			</selectKey>
	</insert>
	
	<select id="getArticleList" parameterClass="com.elf.vo.ArticleListFilter" resultMap="noContentResult">
		SELECT `id`,`title`,`excerpt`,`publish_status`,`author_id`,`category_id`,`comment_status`,`comment_need_audit`,`top`,`publish_level`,`access_password`,`create_time`,`update_time`,`off_line_time`,`page_view`
		FROM `articles`
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="keyword" removeFirstPrepend="true">`title` LIKE '%$keyword$%'</isNotEmpty>
		    <isGreaterThan prepend="AND" property="categoryId" compareValue="0" removeFirstPrepend="true">`category_id` = #categoryId#</isGreaterThan>
		    <isNotNull prepend="AND" property="publishStatus" removeFirstPrepend="true">`publish_status` = #publishStatus#</isNotNull>
		    <isNotNull prepend="AND" property="beginDate" removeFirstPrepend="true">`update_time` BETWEEN #beginDate# AND #endDate#</isNotNull>
		    <isGreaterThan prepend="AND" property="authorId" compareValue="0" removeFirstPrepend="true">`author_id` = #authorId# </isGreaterThan>
		</dynamic>
		ORDER BY `top` DESC, `update_time` DESC
		<dynamic prepend="LIMIT">
			<isGreaterEqual property="pageSize" compareValue="0"> #startIndex#,#pageSize#</isGreaterEqual>
		</dynamic>
	</select>
	
	<select id="getAuthor" parameterClass="int" resultClass="com.elf.entities.User">
		SELECT *
		FROM users
		  LEFT JOIN articles
		    ON articles.author_id = users.id
		WHERE articles.id = #articleId#	
	</select>
	
	<select id="getCategory" parameterClass="int" resultClass="com.elf.entities.Structure">
		SELECT *
		FROM structures
		  LEFT JOIN articles
		    ON articles.category_id = structures.id
		WHERE articles.id = #articleId#	
	</select>
	
	<select id="getTags" parameterClass="int" resultClass="com.elf.entities.Structure">
		SELECT *
		FROM structures
		  LEFT JOIN article_tag_map
		    ON article_tag_map.tag_id = structures.id
		WHERE article_tag_map.article_id = #articleId#	
	</select>
	
	<select id="getAllCommentsCount" parameterClass="int" resultClass="int">
		SELECT COUNT(*)
		FROM comments
		WHERE comments.article_id = #articleId#
	</select>
	
=======
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="articles">
	<typeAlias alias="Article" type="com.elf.entities.Article" />
	<resultMap class="Article" id="noContentResult">
		<result column="id" property="id" />
		<result column="title" property="title" />
		<result column="excerpt" property="excerpt" />
		<result column="publish_status" property="publishStatus" />
		<result column="author_id" property="authorId" />
		<result column="category_id" property="categoryId" />
		<result column="comment_status" property="commentStatus" />
		<result column="comment_need_audit" property="commentNeedAudit"/>
		<result column="top" property="top" />
		<result column="publish_level" property="publishLevel" />
		<result column="access_password" property="accessPassword" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="off_line_time" property="offLineTime" />
		<result column="page_view" property="pageView" />
	</resultMap>
	<resultMap class="Article" id="articleResult" extends="noContentResult">
		<result column="content" property="content" />
	</resultMap>
	
	<insert id="insert" parameterClass="Article">
		INSERT INTO `articles`
            (`id`
            <isNotNull property="title" prepend=",">`title`</isNotNull>
            <isNotNull property="content" prepend=",">`content`</isNotNull>
            <isNotNull property="excerpt" prepend=",">`excerpt`</isNotNull>
            <isNotNull property="publishStatus" prepend=",">`publish_status`</isNotNull>
            <isNotNull property="authorId" prepend=",">`author_id`</isNotNull>
            <isNotNull property="categoryId" prepend=",">`category_id`</isNotNull>
            <isNotNull property="commentStatus" prepend=",">`comment_status`</isNotNull>
            <isNotNull property="commentNeedAudit" prepend=",">`comment_need_audit`</isNotNull>
            <isNotNull property="top" prepend=",">`top`</isNotNull>
            <isNotNull property="publishLevel" prepend=",">`publish_level`</isNotNull>
            <isNotNull property="accessPassword" prepend=",">`access_password`</isNotNull>
            <isNotNull property="createTime" prepend=",">`create_time`</isNotNull>
            <isNotNull property="updateTime" prepend=",">`update_time`</isNotNull>
            <isNotNull property="offLineTime" prepend=",">`off_line_time`</isNotNull>
            <isNotNull property="pageView" prepend=",">`page_view`</isNotNull>
             )
		VALUES 
			(NULL
			<isNotNull property="title" prepend=",">#title#</isNotNull>
            <isNotNull property="content" prepend=",">#content#</isNotNull>
            <isNotNull property="excerpt" prepend=",">#excerpt#</isNotNull>
            <isNotNull property="publishStatus" prepend=",">#publishStatus#</isNotNull>
            <isNotNull property="authorId" prepend=",">#authorId#</isNotNull>
            <isNotNull property="categoryId" prepend=",">#categoryId#</isNotNull>
            <isNotNull property="commentStatus" prepend=",">#commentStatus#</isNotNull>
            <isNotNull property="commentNeedAudit" prepend=",">#commentNeedAudit#</isNotNull>
            <isNotNull property="top" prepend=",">#top#</isNotNull>
            <isNotNull property="publishLevel" prepend=",">#publishLevel#</isNotNull>
            <isNotNull property="accessPassword" prepend=",">#accessPassword#</isNotNull>
            <isNotNull property="createTime" prepend=",">#createTime#</isNotNull>
            <isNotNull property="updateTime" prepend=",">#update_time#</isNotNull>
            <isNotNull property="offLineTime" prepend=",">#offLineTime#</isNotNull>
            <isNotNull property="pageView" prepend=",">#pageView#</isNotNull>   
			);
			
			<selectKey resultClass="int" keyProperty="id">  
				<![CDATA[SELECT LAST_INSERT_ID() AS id ]]>
			</selectKey>
	</insert>
	
	<select id="getArticleList" parameterClass="com.elf.vo.ArticleListFilter" resultMap="noContentResult">
		SELECT `id`,`title`,`excerpt`,`publish_status`,`author_id`,`category_id`,`comment_status`,`comment_need_audit`,`top`,`publish_level`,`access_password`,`create_time`,`update_time`,`off_line_time`,`page_view`
		FROM `articles`
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="keyword" removeFirstPrepend="true">`title` LIKE '%$keyword$%'</isNotEmpty>
		    <isGreaterThan prepend="AND" property="categoryId" compareValue="0" removeFirstPrepend="true">`category_id` = #categoryId#</isGreaterThan>
		    <isNotNull prepend="AND" property="publishStatus" removeFirstPrepend="true">`publish_status` = #publishStatus#</isNotNull>
		    <isNotNull prepend="AND" property="beginDate" removeFirstPrepend="true">`update_time` BETWEEN #beginDate# AND #endDate#</isNotNull>
		    <isGreaterThan prepend="AND" property="authorId" compareValue="0" removeFirstPrepend="true">`author_id` = #authorId# </isGreaterThan>
		</dynamic>
		ORDER BY `top` DESC, `update_time` DESC
		<dynamic prepend="LIMIT">
			<isGreaterEqual property="pageSize" compareValue="0"> #startIndex#,#pageSize#</isGreaterEqual>
		</dynamic>
	</select>
	
	<select id="getAuthor" parameterClass="int" resultClass="com.elf.entities.User">
		SELECT *
		FROM users
		  LEFT JOIN articles
		    ON articles.author_id = users.id
		WHERE articles.id = #articleId#	
	</select>
	
	<select id="getCategory" parameterClass="int" resultClass="com.elf.entities.Structure">
		SELECT *
		FROM structures
		  LEFT JOIN articles
		    ON articles.category_id = structures.id
		WHERE articles.id = #articleId#	
	</select>
	
	<select id="getTags" parameterClass="int" resultClass="com.elf.entities.Structure">
		SELECT *
		FROM structures
		  LEFT JOIN article_tag_map
		    ON article_tag_map.tag_id = structures.id
		WHERE article_tag_map.article_id = #articleId#	
	</select>
	
	<select id="getAllCommentsCount" parameterClass="int" resultClass="int">
		SELECT COUNT(*)
		FROM comments
		WHERE comments.article_id = #articleId#
	</select>
	
>>>>>>> c5dd20a1ddcf3a1242761d65546b427a783df6c6
</sqlMap>